spring.application.name=ecommerce-backend

# Database Configuration (use environment variables)
SPRING_DATASOURCE_URL=jdbc:mysql://avnadmin:AVNS_CT1apvmGpNX-GZmIsJR@technotitans-technotitans.l.aivencloud.com:27748/ecommerce3?ssl-mode=REQUIRED
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:admin}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}

spring.jpa.show-sql=true

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=sub
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}
spring.jpa.properties.hibernate.transaction.jta.platform=no

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:86400000}
jwt.refresh.expiration=${JWT_REFRESH_EXPIRATION:1209600000}

# Stripe Configuration
stripe.secret.key=${STRIPE_SECRET_KEY}
stripe.public.key=${STRIPE_PUBLIC_KEY}

# Mail Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.debug=true

# CORS Configuration
allowed.origins=${ALLOWED_ORIGINS:http://localhost:3000,https://ecommerce-frontend-hf4x.vercel.app}

# File Upload Configuration
upload.directory=/app/uploads
spring.web.resources.static-locations=file:/app/uploads/,classpath:/static/
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Server Configuration
server.port=${PORT:8080}

# Hibernate Logging
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Allow bean overriding and circular references
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

spring.thymeleaf.check-template-location=false
spring.jpa.open-in-view=false
management.security.enabled=false






spring.jpa.hibernate.ddl-auto=update

logging.level.org.springframework.security=DEBUG
logging.level.com.ecommerce.ecommerce_backend=DEBUG
logging.level.org.springframework.web=DEBUG
aws.accessKeyId=${AWS_ACCESS_KEY_ID}
aws.secretAccessKey=${AWS_SECRET_ACCESS_KEY}
aws.region=${AWS_REGION:us-north-1}
aws.s3.bucket=${AWS_S3_BUCKET:technotitans-product-images}